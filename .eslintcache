[{"C:\\PoclarCorr1\\poclacorr-v1\\src\\App.js":"1","C:\\PoclarCorr1\\poclacorr-v1\\src\\components\\Sidebar.js":"2","C:\\PoclarCorr1\\poclacorr-v1\\src\\components\\SidebarData.js":"3","C:\\PoclarCorr1\\poclacorr-v1\\src\\components\\SubMenu.js":"4","C:\\PoclarCorr1\\poclacorr-v1\\src\\pages\\UserManagemnet.js":"5","C:\\PoclarCorr1\\poclacorr-v1\\src\\index.js":"6","C:\\PoclarCorr1\\poclacorr-v1\\src\\reportWebVitals.js":"7","C:\\PoclarCorr1\\poclacorr-v1\\src\\pages\\contentmanagement.js":"8","C:\\PoclarCorr1\\poclacorr-v1\\src\\pages\\batchmanagement.js":"9","C:\\PoclarCorr1\\poclacorr-v1\\src\\pages\\Loginform.js":"10","C:\\PoclarCorr1\\poclacorr-v1\\src\\components\\RawTable.js":"11","C:\\PoclarCorr1\\poclacorr-v1\\src\\pages\\Home.js":"12","C:\\PoclarCorr1\\poclacorr-v1\\src\\components\\DoubleRangeSlider.js":"13","C:\\PoclarCorr1\\poclacorr-v1\\src\\components\\CapturePTable.js":"14","C:\\PoclarCorr1\\poclacorr-v1\\src\\components\\SnapTable.js":"15","C:\\PoclarCorr1\\poclacorr-v1\\src\\components\\IconButton.js":"16","C:\\PoclarCorr1\\poclacorr-v1\\src\\components\\CaptureDetailList.js":"17","C:\\PoclarCorr1\\poclacorr-v1\\src\\pages\\contentscaptures.js":"18","C:\\PoclarCorr1\\poclacorr-v1\\src\\components\\CaptureDetailTable.js":"19","C:\\PoclarCorr1\\poclacorr-v1\\src\\map\\SnapMap.js":"20"},{"size":1849,"mtime":1610617241679,"results":"21","hashOfConfig":"22"},{"size":1757,"mtime":1610071171000,"results":"23","hashOfConfig":"22"},{"size":2808,"mtime":1610440275958,"results":"24","hashOfConfig":"22"},{"size":1667,"mtime":1610072292630,"results":"25","hashOfConfig":"22"},{"size":214,"mtime":1610072831407,"results":"26","hashOfConfig":"22"},{"size":500,"mtime":1610419402208,"results":"27","hashOfConfig":"22"},{"size":362,"mtime":1609203314958,"results":"28","hashOfConfig":"22"},{"size":2105,"mtime":1611304521112,"results":"29","hashOfConfig":"22"},{"size":550,"mtime":1610111264971,"results":"30","hashOfConfig":"22"},{"size":6123,"mtime":1610302798983,"results":"31","hashOfConfig":"22"},{"size":6327,"mtime":1610440667580,"results":"32","hashOfConfig":"22"},{"size":299,"mtime":1611304520008,"results":"33","hashOfConfig":"22"},{"size":4316,"mtime":1611307491799,"results":"34","hashOfConfig":"22"},{"size":4483,"mtime":1611306317638,"results":"35","hashOfConfig":"22"},{"size":6289,"mtime":1610519483498,"results":"36","hashOfConfig":"22"},{"size":658,"mtime":1610500497043,"results":"37","hashOfConfig":"22"},{"size":2151,"mtime":1610604673951,"results":"38","hashOfConfig":"22"},{"size":4142,"mtime":1611307437594,"results":"39","hashOfConfig":"22"},{"size":3801,"mtime":1611306719374,"results":"40","hashOfConfig":"22"},{"size":6747,"mtime":1611310885855,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"it6nuq",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"86","usedDeprecatedRules":"44"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"89","usedDeprecatedRules":"44"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\PoclarCorr1\\poclacorr-v1\\src\\App.js",[],["92","93"],"C:\\PoclarCorr1\\poclacorr-v1\\src\\components\\Sidebar.js",[],"C:\\PoclarCorr1\\poclacorr-v1\\src\\components\\SidebarData.js",[],"C:\\PoclarCorr1\\poclacorr-v1\\src\\components\\SubMenu.js",[],"C:\\PoclarCorr1\\poclacorr-v1\\src\\pages\\UserManagemnet.js",[],"C:\\PoclarCorr1\\poclacorr-v1\\src\\index.js",[],"C:\\PoclarCorr1\\poclacorr-v1\\src\\reportWebVitals.js",[],"C:\\PoclarCorr1\\poclacorr-v1\\src\\pages\\contentmanagement.js",["94"],"import React,{ Fragment } from 'react'\r\nimport RawTable from '../components/RawTable'\r\nimport CaptureTable from '../components/CapturePTable'\r\nimport CaptureDetailTable from '../components/CaptureDetailTable'\r\nimport MapComp from '../map/SnapMap'\r\nimport DoubleRangeSlider from '../components/DoubleRangeSlider'\r\nimport IconButton from '../components/IconButton'\r\nimport CaptureDetailList from '../components/CaptureDetailList'\r\nimport Divider from '@material-ui/core/Divider';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nfunction Contacts() {\r\n    return (\r\n            <div className=\"Contacts\">\r\n                    <Fragment> \r\n                      <MapComp/>\r\n                   </Fragment>\r\n                   <h3 style={{ marginLeft: 40 }}>Capture(RAW)</h3>  \r\n                   <Divider/>\r\n                    <CaptureDetailList/>\r\n                   <AddIcon style={{fontSize: 40 }}/>\r\n              </div>\r\n        );\r\n  }\r\n\r\n  function Chat() {\r\n    return (\r\n        <div className=\"Chat\">\r\n                <CaptureDetailTable/>\r\n                <DoubleRangeSlider/>\r\n        </div>\r\n    );\r\n  }\r\n  \r\n  function SplitPane(props) {\r\n    return (\r\n      <div className=\"SplitPane\">\r\n        <div className=\"SplitPane-left\">\r\n          {props.left}\r\n        </div>\r\n        <div className=\"SplitPane-right\">\r\n          {props.right}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n\r\nexport const Raw = () => {\r\n    return (\r\n            <RawTable/>\r\n    );     \r\n}\r\n\r\nexport const CreateSnap = () => {\r\n    return (\r\n         <SplitPane\r\n            left={\r\n                <Contacts />\r\n            }\r\n            right={\r\n                <Chat />\r\n             } />\r\n    )\r\n}\r\n\r\nexport const Capture = () => {\r\n    return (\r\n        <CaptureTable/>\r\n    )\r\n}\r\n\r\nexport const Snap = () => {\r\n    return (\r\n             <RawTable/>\r\n    )\r\n}\r\n\r\n\r\nclass ContentManagement extends React.Component {\r\n    render(){\r\n      return (\r\n          <div className='contentmanagement'>\r\n              <h1>ContentManagement</h1>\r\n          </div>\r\n      )\r\n   }\r\n}\r\n\r\nexport default ContentManagement","C:\\PoclarCorr1\\poclacorr-v1\\src\\pages\\batchmanagement.js",[],"C:\\PoclarCorr1\\poclacorr-v1\\src\\pages\\Loginform.js",["95"],"import React, { Component } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { loadReCaptcha, ReCaptcha } from \"react-recaptcha-v3\";\r\nimport axios from \"axios\";\r\n// import $ from \"jquery\";\r\nimport {} from \"jquery.cookie\";\r\naxios.defaults.withCredentials = true;\r\nconst headers = { withCredentials: true };\r\n\r\nclass LoginForm extends Component {\r\n  componentDidMount() {\r\n    loadReCaptcha(\"6LfGieAUAAAAAJSOoqXS5VQdT_e5AH8u0n2e1PDb\");\r\n  }\r\n\r\n  verifyCallback = recaptchaToken => {\r\n    // Here you will get the final recaptchaToken!!!\r\n    console.log(recaptchaToken, \"<= your recaptcha token\");\r\n  };\r\n\r\n  join = () => {\r\n    const joinEmail = this.joinEmail.value;\r\n    const joinName = this.joinName.value;\r\n    const joinPw = this.joinPw.value;\r\n    const regExp = /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/i;\r\n    const regExp2 = /^(?=.*[a-zA-Z])(?=.*[!@#$%^*+=-])(?=.*[0-9]).{8,16}$/;\r\n    if (joinEmail === \"\" || joinEmail === undefined) {\r\n      alert(\"이메일 주소를 입력해주세요.\");\r\n      this.joinEmail.focus();\r\n      return;\r\n    } else if (\r\n      joinEmail.match(regExp) === null ||\r\n      joinEmail.match(regExp) === undefined\r\n    ) {\r\n      alert(\"이메일 형식에 맞게 입력해주세요.\");\r\n      this.joinEmail.value = \"\";\r\n      this.joinEmail.focus();\r\n      return;\r\n    } else if (joinName === \"\" || joinName === undefined) {\r\n      alert(\"이름을 입력해주세요.\");\r\n      this.joinName.focus();\r\n      return;\r\n    } else if (joinPw === \"\" || joinPw === undefined) {\r\n      alert(\"비밀번호를 입력해주세요.\");\r\n      this.joinPw.focus();\r\n      return;\r\n    } else if (\r\n      joinPw.match(regExp2) === null ||\r\n      joinPw.match(regExp2) === undefined\r\n    ) {\r\n      alert(\"비밀번호를 숫자와 문자, 특수문자 포함 8~16자리로 입력해주세요.\");\r\n      this.joinPw.value = \"\";\r\n      this.joinPw.focus();\r\n      return;\r\n    }\r\n\r\n    const send_param = {\r\n      headers,\r\n      email: this.joinEmail.value,\r\n      name: this.joinName.value,\r\n      password: this.joinPw.value\r\n    };\r\n    axios\r\n      .post(\"http://localhost:8080/member/join\", send_param)\r\n      //정상 수행\r\n      .then(returnData => {\r\n        if (returnData.data.message) {\r\n          alert(returnData.data.message);\r\n          //이메일 중복 체크\r\n          if (returnData.data.dupYn === \"1\") {\r\n            this.joinEmail.value = \"\";\r\n            this.joinEmail.focus();\r\n          } else {\r\n            this.joinEmail.value = \"\";\r\n            this.joinName.value = \"\";\r\n            this.joinPw.value = \"\";\r\n          }\r\n        } else {\r\n          alert(\"회원가입 실패\");\r\n        }\r\n      })\r\n      //에러\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  login = () => {\r\n    const loginEmail = this.loginEmail.value;\r\n    const loginPw = this.loginPw.value;\r\n\r\n    if (loginEmail === \"\" || loginEmail === undefined) {\r\n      alert(\"이메일 주소를 입력해주세요.\");\r\n      this.loginEmail.focus();\r\n      return;\r\n    } else if (loginPw === \"\" || loginPw === undefined) {\r\n      alert(\"비밀번호를 입력해주세요.\");\r\n      this.loginPw.focus();\r\n      return;\r\n    }\r\n    window.location.href ='/home';\r\n  };\r\n  render() {\r\n    const formStyle = {\r\n      marginLeft: 500,\r\n      marginRight: 500,\r\n      marginTop: 100,\r\n      padding: 20,\r\n      'border-color': 'black',\r\n      'border-style': 'solid',\r\n\r\n    };\r\n    const buttonStyle = {\r\n      marginTop: 10,\r\n      padding: 10\r\n    };\r\n\r\n    return (\r\n      <Form style={formStyle}>\r\n        {/* <Form.Group controlId=\"joinForm\">\r\n          <Form.Label>Email address</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            maxLength=\"100\"\r\n            ref={ref => (this.joinEmail = ref)}\r\n            placeholder=\"Enter email\"\r\n          />\r\n          <Form.Text className=\"text-muted\">\r\n            We'll never share your email with anyone else.\r\n          </Form.Text>\r\n          <Form.Label>name</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            maxLength=\"20\"\r\n            ref={ref => (this.joinName = ref)}\r\n            placeholder=\"name\"\r\n          />\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            maxLength=\"64\"\r\n            ref={ref => (this.joinPw = ref)}\r\n            placeholder=\"Password\"\r\n          />\r\n          <Button\r\n            style={buttonStyle}\r\n            onClick={this.join}\r\n            variant=\"primary\"\r\n            type=\"button\"\r\n            block\r\n          >\r\n            회원가입\r\n          </Button>\r\n        </Form.Group> */}\r\n\r\n        <Form.Group controlId=\"loginForm\">\r\n          <Form.Label>Email address</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            maxLength=\"100\"\r\n            ref={ref => (this.loginEmail = ref)}\r\n            placeholder=\"Enter email\"\r\n          />\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            maxLength=\"20\"\r\n            ref={ref => (this.loginPw = ref)}\r\n            placeholder=\"Password\"\r\n          />\r\n          <ReCaptcha\r\n            sitekey=\"6LfGieAUAAAAAJSOoqXS5VQdT_e5AH8u0n2e1PDb\"\r\n            action=\"login\"\r\n            verifyCallback={this.verifyCallback}\r\n          />\r\n          <Button\r\n            style={buttonStyle}\r\n            onClick={this.login}\r\n            variant=\"primary\"\r\n            type=\"button\"\r\n            block\r\n          >\r\n            로그인\r\n          </Button>\r\n          <p></p>\r\n           { <p>\r\n            <a href=\"https://github.com/ngduc/react-tabulator\" target=\"_blank\">\r\n              Back to: Github Repo: react-tabulator\r\n            </a>\r\n          </p> }\r\n          <Button\r\n            style={buttonStyle}\r\n            onClick={this.join}\r\n            variant=\"primary\"\r\n            type=\"button\"\r\n            block\r\n          >\r\n            회원가입\r\n          </Button>\r\n        </Form.Group>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginForm;\r\n","C:\\PoclarCorr1\\poclacorr-v1\\src\\components\\RawTable.js",["96","97","98","99"],"import React from \"react\";\r\nimport { ButtonToolbar , Button } from \"react-bootstrap\";\r\nimport \"../styles.css\";\r\n\r\nimport DateEditor from \"react-tabulator/lib/editors/DateEditor\";\r\nimport MultiValueFormatter from \"react-tabulator/lib/formatters/MultiValueFormatter\";\r\n// import MultiSelectEditor from \"react-tabulator/lib/editors/MultiSelectEditor\";\r\n\r\nimport \"react-tabulator/lib/styles.css\"; // default theme\r\nimport \"react-tabulator/css/bootstrap/tabulator_bootstrap.min.css\"; // use Theme(s)\r\n\r\n// for React 16.4.x use: import { ReactTabulator } - example in github repo.\r\nimport { React15Tabulator, reactFormatter } from \"react-tabulator\"; // for React 15.x\r\n\r\nfunction SimpleButton(props) {\r\n  const rowData = props.cell._cell.row.data;\r\n  const cellValue = props.cell._cell.value || \"Edit | Show\";\r\n  return <button onClick={() => alert(rowData.name)}>{cellValue}</button>;\r\n}\r\n\r\nconst data = [\r\n  {\r\n    Storage: '101NAS',\r\n    Rounds: \"round[{YYYYMMDDhhmmss}_{seq3}] caputre[{seq2}]\",\r\n    RawCapture: \" caputre[03]\",\r\n    date: \"01/01/1980\",\r\n    rating: 5,\r\n    Status: [\"todo\", \"doing\"],\r\n    Equipment: \"v101\",\r\n    passed: true,\r\n\r\n  },\r\n  {\r\n    Storage: '101NAS',\r\n    Rounds: \"round[{YYYYMMDDhhmmss}_{seq3}] caputre[{seq2}]\",\r\n    RawCapture: \" caputre[04]\",\r\n    date: \"12/05/1989\",\r\n    Status: [\"todo\"],\r\n    Equipment: \"v101\",\r\n    passed: true,\r\n\r\n  },\r\n  {\r\n    Storage: '102NAS',\r\n    Rounds: \"round[{YYYYMMDDhhmmss}_{seq3}] caputre[{seq2}]\",\r\n    RawCapture: \" caputre[05]\",\r\n    date: \"10/05/2020\",\r\n    Status: [\"todo\"],\r\n    Equipment: \"v101\",\r\n    passed: true,\r\n\r\n  },\r\n  {\r\n    Storage: '123NAS',\r\n    Rounds: \"round[{YYYYMMDDhhmmss}_{seq3}] caputre[{seq2}]\",\r\n    RawCapture: \" caputre[06]\",\r\n    date: \"11/08/2020\",\r\n    Status: [\"todo\"],\r\n    Equipment: \"v102\",\r\n    passed: false,\r\n\r\n  },\r\n  {\r\n    Storage:'155NAS',\r\n    Rounds: \"round[{YYYYMMDDhhmmss}_{seq3}] caputre[{seq2}]\",\r\n    RawCapture: \" caputre[07]\",\r\n    date: \"07/01/2020\",\r\n    Status: [\"doing\"],\r\n    Equipment: \"v102\",\r\n    passed: false,\r\n\r\n  },\r\n  {\r\n    Storage: '123NAS',\r\n    Rounds: \"round[{YYYYMMDDhhmmss}_{seq3}]\",\r\n    RawCapture: \" caputre[01]\",\r\n    date: \"01/10/2021\",\r\n    rating: 4,\r\n    Status: [\"doing\"],\r\n    Equipment: \"v102\",\r\n    passed: false,\r\n  },\r\n  {\r\n    Storage: '101NAS',\r\n    Rounds: \"round[{YYYYMMDDhhmmss}_{seq3}] caputre[{seq2}]\",\r\n    RawCapture: \" caputre[02]\",\r\n    date: \"12/10/2020\",\r\n    rating: 4,\r\n    Status: [\"doing\"],\r\n    Equipment: \"v102\",\r\n    passed: false,\r\n  }\r\n];\r\n\r\n// Editable Example:\r\nconst colorOptions = {\r\n  \"\": \"&nbsp;\",\r\n  red: \"red\",\r\n  green: \"green\",\r\n  yellow: \"yellow\"\r\n};\r\nconst petOptions = [\r\n  { id: \"cat\", name: \"cat\" },\r\n  { id: \"dog\", name: \"dog\" },\r\n  { id: \"fish\", name: \"fish\" }\r\n];\r\nconst rawtableColumns = [\r\n  {formatter:\"rowSelection\", titleFormatter:\"rowSelection\", hozAlign:\"center\",width:50, headerSort:false, cellClick:function(e, cell){\r\n    cell.getRow().toggleSelect()\r\n  }},\r\n  {\r\n    title: \"Storage\",\r\n    field: \"Storage\",\r\n    width: 100,\r\n    headerFilter: \"input\"\r\n  },\r\n  {\r\n    title: \"Rounds\",\r\n    field: \"Rounds\",\r\n    width: 400,\r\n    hozAlign: \"center\",\r\n    formatter: \"input\",\r\n  },\r\n  {\r\n    title: \"RawCapture\",\r\n    field: \"RawCapture\",\r\n    headerFilter: \"input\"\r\n  },\r\n  {\r\n    title: \"Status\",\r\n    field: \"Status\",\r\n    sorter: (a, b) => a.toString().localeCompare(b.toString()),\r\n    // editor: MultiSelectEditor,\r\n    editorParams: { values: petOptions },\r\n    formatter: MultiValueFormatter,\r\n    formatterParams: { style: \"PILL\" }\r\n  },\r\n  {\r\n    title: \"Date\",\r\n    field: \"date\",\r\n    width: 150,\r\n    headerFilter: \"input\",\r\n    editorParams: { format: \"MM/DD/YYYY\" }\r\n  },\r\n  {\r\n    title: \"Equipment\",\r\n    field: \"Equipment\",\r\n    width: 100,\r\n    editor: \"input\",\r\n    headerFilter: \"input\"\r\n  },\r\n  {\r\n    title: \"Passed?\",\r\n    field: \"passed\",\r\n    hozAlign: \"center\",\r\n    formatter: \"tickCross\",\r\n    editor: true\r\n  }\r\n];\r\n\r\nclass Raw extends React.Component {\r\n  state = {\r\n    data: [],\r\n    selectedName: \"\"\r\n  };\r\n  ref = null;\r\n\r\n  // columns = [\r\n  //   { title: \"Name\", field: \"name\", width: 150 },\r\n  //   { title: \"Age\", field: \"age\", hozAlign: \"left\", formatter: \"progress\" },\r\n  //   { title: \"Favourite Color\", field: \"color\" },\r\n  //   { title: \"Date Of Birth\", field: \"dob\" },\r\n  //   { title: \"Rating\", field: \"rating\", hozAlign: \"center\", formatter: \"star\" },\r\n  //   {\r\n  //     title: \"Passed?\",\r\n  //     field: \"passed\",\r\n  //     hozAlign: \"center\",\r\n  //     formatter: \"tickCross\"\r\n  //   },\r\n  //   {\r\n  //     title: \"Custom\",\r\n  //     field: \"custom\",\r\n  //     hozAlign: \"center\",\r\n  //     editor: \"input\",\r\n  //     formatter: reactFormatter(\r\n  //       <SimpleButton\r\n  //         onSelect={(name) => {\r\n  //           this.setState({ selectedName: name });\r\n  //           alert(name);\r\n  //         }}\r\n  //       />\r\n  //     )\r\n  //   }\r\n  // ];\r\n\r\n  rowClick = (e, row) => {\r\n    console.log(\"ref table: \", this.ref.table); // this is the Tabulator table instance\r\n    console.log(`rowClick id: \\${row.getData().id}`, row, e);\r\n    this.setState({ selectedName: row.getData().name });\r\n  };\r\n\r\n  setData = () => {\r\n    this.setState({ data });\r\n  };\r\n\r\n  clearData = () => {\r\n    this.setState({ data: [] });\r\n  };\r\n\r\n  render() {\r\n    const options = {\r\n      height: 300,\r\n\r\n    };\r\n    return (\r\n      <div>\r\n        <React15Tabulator\r\n          ref={(ref) => (this.ref = ref)}\r\n          columns={rawtableColumns}\r\n          data={data}\r\n          rowClick={this.rowClick}\r\n          options={options}\r\n          data-custom-attr=\"test-custom-attribute\"\r\n          // footerElement={<span>Footer</span>}\r\n        />\r\n        {/* <p>\r\n          <a href=\"https://github.com/ngduc/react-tabulator\" target=\"_blank\">\r\n            Back to: Github Repo: react-tabulator\r\n          </a>\r\n        </p> */}\r\n        <ButtonToolbar>\r\n              <Button\r\n              onClick={this.setData}\r\n              variant=\"primary\"\r\n            >\r\n              geoxyz 배치 처리 요청\r\n            </Button>\r\n\r\n            <Button\r\n              onClick={this.clearData}\r\n              variant=\"primary\"\r\n            >\r\n              해당 capture 페이지 이동\r\n            </Button>\r\n          </ButtonToolbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Raw;\r\n","C:\\PoclarCorr1\\poclacorr-v1\\src\\pages\\Home.js",[],"C:\\PoclarCorr1\\poclacorr-v1\\src\\components\\DoubleRangeSlider.js",["100","101","102","103"],"import React from 'react';\r\nimport { ButtonToolbar , Button } from \"react-bootstrap\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport axios from 'axios'\r\nimport { reactFormatter } from 'react-tabulator';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n    height : '100%',\r\n    padding : '50',\r\n    margin: '50px'\r\n  },\r\n});\r\n\r\nconst marks = [\r\n    {\r\n      value: 1,\r\n      label: 'capture {\\n} start',\r\n    },\r\n    {\r\n      value: 2,\r\n      label: 'capture finish',\r\n    },\r\n  ];\r\n\r\nfunction valuetext(value) {\r\n  return `${value}°C`;\r\n}\r\n\r\n\r\nclass DoubleRangeSlider extends  React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n      this.state = {\r\n      classes : useStyles,\r\n      value : [this.props.starttime,this.props.endtime],\r\n      // value : [,14.000],\r\n      value2 : [0,99],\r\n      geojson: this.props.geojson,\r\n      geojsonPath: null\r\n      // [value, setValue] : React.useState([1, 1000])\r\n      }\r\n    }\r\n  handleChange = (e ,value) => {\r\n    this.setState({value: value})\r\n  }\r\n  \r\n  // shouldComponentUpdate(nextProps, nextState) {\r\n    // if (this.props.isBlank !== nextProps.isBlank) {\r\n    //   console.log('DBRangeSlider update Props', nextProps)\r\n    //   this.setState({starttime : nextProps.starttime , endtime :nextProps.endtime})\r\n    //   // return true;\r\n    // // }\r\n    // // if (this.state.isBlank !== nextState.isBlank) {\r\n    //   console.log('DBRangeSlider update State', nextState)\r\n    //   return true;\r\n    // }\r\n    // return false\r\n  // }\r\n\r\n  requestSlice(){\r\n    let startTime = this.state.value[0]\r\n    let endTime = this.state.value[1]\r\n    axios({\r\n        headers:{ \"Content-Type\": \"application/json; charset=UTF-8\" },\r\n        method: 'post',\r\n        data: {\"start\" : this.state.value[0], \"end\" : this.state.value[1]},\r\n        url: `../../api/admin/contents/snap/one`,\r\n        params: {id: this.props.uuid.substring(1)}\r\n      })\r\n      //정상 수행\r\n      .then(returnData => {\r\n        this.setState({geojsonPath: returnData.data.geojsonPath})\r\n      })\r\n      //에러\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n    };\r\n  render(){\r\n    return (\r\n      <div className={'range-slider'}>\r\n        <Typography id=\"range-slider\" gutterBottom>\r\n\r\n        </Typography>\r\n        <Slider\r\n          value={\r\n            this.props.starttime === null\r\n            ? this.state.value2\r\n            // : [this.state.value[0],this.state.value[1]]\r\n            : [this.props.starttime,this.props.endtime]\r\n            // : [parseInt(this.state.value.starttime), parseInt(this.state.value.endtime)]\r\n          //   // [parseInt(this.props.starttime), parseInt(this.props.endtime)]\r\n          //  this.state.value\r\n\r\n          }\r\n          onChangeCommitted={function(){\r\n            console.log(this.state.value[0],this.state.value[1])\r\n            this.props.DataIE(this.state.geojson,this.state.value[0],this.state.value[1],this.state.geojsonPath);\r\n          }.bind(this)}\r\n          onChange={this.handleChange}\r\n          // onClick={console.log(this.value)}\r\n          valueLabelDisplay=\"on\" \r\n          aria-labelledby=\"range-slider\"\r\n          step={0.001}\r\n          // marks={marks}\r\n          min={1}\r\n          max={\r\n            // this.props.endtime === null\r\n            // ? this.state.value2.endtime\r\n            // : this.props.endtime\r\n            40\r\n          } \r\n          getAriaValueText={valuetext}\r\n        />\r\n           {/* <Slider\r\n            value={this.state.value2}\r\n            onChange={this.testHandle}\r\n            valueLabelDisplay=\"auto\"\r\n            aria-labelledby=\"range-slider\"\r\n            getAriaValueText={valuetext}\r\n            /> */}\r\n        <ButtonToolbar>\r\n              <Button\r\n                variant=\"primary\"\r\n                style={{margin:\"10px\"}}\r\n              >\r\n              임시저장\r\n              </Button>\r\n              <Button\r\n                onClick={this.requestSlice.bind(this)}\r\n                variant=\"primary\"\r\n                style={{margin:\"10px\"}}\r\n              >\r\n              스냅 자르기\r\n              </Button>\r\n            </ButtonToolbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default DoubleRangeSlider","C:\\PoclarCorr1\\poclacorr-v1\\src\\components\\CapturePTable.js",["104","105","106","107","108","109"],"import React, {dataState,dataEffect, useState} from \"react\";\r\nimport { ButtonToolbar , Button } from \"react-bootstrap\"\r\nimport {withRouter} from 'react-router-dom';\r\nimport \"../styles.css\";\r\nimport axios from \"axios\";\r\nimport {} from \"jquery.cookie\";\r\n\r\nimport DateEditor from \"react-tabulator/lib/editors/DateEditor\";\r\nimport MultiValueFormatter from \"react-tabulator/lib/formatters/MultiValueFormatter\";\r\n// import MultiSelectEditor from \"react-tabulator/lib/editors/MultiSelectEditor\";\r\n\r\nimport \"react-tabulator/lib/styles.css\";\r\nimport \"react-tabulator/css/bootstrap/tabulator_bootstrap.min.css\"; \r\n\r\nimport { ReactTabulator } from \"react-tabulator\"\r\n\r\nconst CapturePtableColumns = [\r\n  {formatter:\"rowSelection\", titleFormatter:\"rowSelection\", headerHozAlign:\"center\",hozAlign:\"center\",width:50, headerSort:false,selectable:true, cellClick:function(e, cell){\r\n    cell.getRow().toggleSelect()\r\n    console.log(cell.getRow())\r\n  }},\r\n  {\r\n    title: \"storageDisplayName\",\r\n    field: \"storageDisplayName\",\r\n    width: 100,\r\n    headerFilter: \"input\"\r\n  },\r\n  {\r\n    title: \"Date\",\r\n    field: \"date\",\r\n    width: 150,\r\n    hozAlign: \"center\",\r\n    headerFilter: \"input\",\r\n    editorParams: { format: \"MM/DD/YYYY\" }\r\n  },\r\n  {\r\n    title: \"isEnabled\",\r\n    field: \"isEnabled\",\r\n    width: 100,\r\n    hozAlign: \"center\",\r\n    formatter: \"tickCross\",\r\n    editor: true\r\n  },\r\n  {\r\n    title: \"rating\",\r\n    field: \"rating\",\r\n    width: 100,\r\n    hozAlign: \"center\",\r\n    formatter: \"input\",\r\n  },\r\n  {\r\n    title: \"folderName\",\r\n    field: \"folderName\",\r\n    hozAlign: \"center\",\r\n    headerFilter: \"input\"\r\n  },\r\n  {\r\n    title: \"uuid\",\r\n    field: \"uuid\",\r\n    hozAlign: \"center\",\r\n    headerFilter: \"input\"\r\n  },\r\n  {\r\n    title: \"status\",\r\n    field: \"status\",\r\n    width: 100,\r\n    hozAlign: \"center\",\r\n    formatter: \"input\",\r\n  },\r\n];\r\n\r\nclass Capture extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      loading: false,\r\n      data: [],\r\n      // selectedRow: \"\",\r\n      selectedRound:\"\",\r\n      selectedCapture: \"\",\r\n      selecteduuid:\"\"\r\n    };\r\n  }\r\n  ref = null;\r\n  \r\n  componentDidMount() {\r\n    // const search  = queryString.parse(this.props.location.search);\r\n    }\r\n  goToDetailPage = () => {\r\n    this.props.history.push(`/contentmanagement/capturep/detail?${this.state.selecteduuid}`);\r\n    // this.props.history.push(`/`);\r\n  }\r\n\r\n  rowClick = (e, row) => {\r\n    console.log(\"ref table: \", this.ref.table); // this is the Tabulator table instance\r\n    console.log(`rowClick id: \\${row.getData().id}`, row._row.data, e);\r\n    console.log(`rowClick data: \\${row.getData().data}`, row, e);\r\n    this.setState({selectedRound:row._row.data.Rounds, selectedCapture:row._row.data.Capture,selecteduuid:row._row.data.uuid});\r\n    row.getElement().style.backgroundColor = \"#A6A6DF\"; \r\n  };\r\n  setData = (e) => {\r\n    this.setState({ e });\r\n  };\r\n\r\n  clearData = () => {\r\n    this.setState({ data: [] });\r\n  };\r\n\r\n  render() {\r\n    const options = {\r\n      // height: 450,\r\n      ajaxURL: '../api/admin/contents/capturep/all',\r\n      headers: {\r\n        \"Content-type\": 'application/json; charset=utf-8', //set specific content type\r\n      },\r\n      ajaxResponse: function (url, params, response) {\r\n          return response.capturePList; //return the response data rerrrrto tabulator\r\n      },\r\n      ajaxError: function (error) {\r\n          console.log('ajaxError', error);\r\n      }\r\n    };\r\n    return (\r\n      <div id=\"capture-table\">\r\n        <ReactTabulator\r\n          ref={(ref) => (this.ref = ref)}\r\n          columns={CapturePtableColumns}\r\n          data={this.state.data}\r\n          rowClick={this.rowClick}\r\n          options={options}\r\n          data-custom-attr=\"test-custom-attribute\"\r\n          footerElement={<span>Footer</span>}\r\n        />\r\n        {/* <p>\r\n          <a href=\"https://github.com/ngduc/react-tabulator\" target=\"_blank\">\r\n            Back to: Github Repo: react-tabulator\r\n          </a>\r\n        </p> */}\r\n        <ButtonToolbar>\r\n              <Button\r\n              // onClick={()=>{window.location.href =`/contentmanagement/capturep/detail?${this.state.selectedRound}&${this.state.selectedCapture}`}}\r\n              onClick={this.goToDetailPage}\r\n\r\n              variant=\"primary\"\r\n              style={{marginRight:\"20px\"}}\r\n            >\r\n             지도로 보기\r\n            </Button>\r\n          </ButtonToolbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Capture);\r\n","C:\\PoclarCorr1\\poclacorr-v1\\src\\components\\SnapTable.js",["110","111","112","113"],"import React from \"react\";\r\nimport { ButtonToolbar , Button } from \"react-bootstrap\";\r\nimport \"../styles.css\";\r\n\r\nimport DateEditor from \"react-tabulator/lib/editors/DateEditor\";\r\nimport MultiValueFormatter from \"react-tabulator/lib/formatters/MultiValueFormatter\";\r\n// import MultiSelectEditor from \"react-tabulator/lib/editors/MultiSelectEditor\";\r\n\r\nimport \"react-tabulator/lib/styles.css\"; // default theme\r\nimport \"react-tabulator/css/bootstrap/tabulator_bootstrap.min.css\"; // use Theme(s)\r\n\r\n// for React 16.4.x use: import { ReactTabulator } - example in github repo.\r\nimport { React15Tabulator, reactFormatter } from \"react-tabulator\"; // for React 15.x\r\n\r\nfunction SimpleButton(props) {\r\n  const rowData = props.cell._cell.row.data;\r\n  const cellValue = props.cell._cell.value || \"Edit | Show\";\r\n  return <button onClick={() => alert(rowData.name)}>{cellValue}</button>;\r\n}\r\n\r\nconst data = [\r\n  {\r\n    Storage: '101NAS',\r\n    Rounds: \"round[{YYYYMMDDhhmmss}_{seq3}] caputre[{seq2}]\",\r\n    Capture: \" caputre[03]\",\r\n    date: \"01/01/1980\",\r\n    rating: 5,\r\n    Status: [\"todo\", \"doing\"],\r\n    Equipment: \"v101\",\r\n    Snaps: \"snap1\",\r\n\r\n  },\r\n  {\r\n    Storage: '101NAS',\r\n    Rounds: \"round[{YYYYMMDDhhmmss}_{seq3}] caputre[{seq2}]\",\r\n    Capture: \" caputre[04]\",\r\n    date: \"12/05/1989\",\r\n    Status: [\"todo\"],\r\n    Equipment: \"v101\",\r\n    Snaps: \"snap2\",\r\n\r\n  },\r\n  {\r\n    Storage: '102NAS',\r\n    Rounds: \"round[{YYYYMMDDhhmmss}_{seq3}] caputre[{seq2}]\",\r\n    Capture: \" caputre[05]\",\r\n    date: \"10/05/2020\",\r\n    Status: [\"todo\"],\r\n    Equipment: \"v101\",\r\n    Snaps:\"snap2\",\r\n\r\n  },\r\n  {\r\n    Storage: '123NAS',\r\n    Rounds: \"round[{YYYYMMDDhhmmss}_{seq3}] caputre[{seq2}]\",\r\n    Capture: \" caputre[06]\",\r\n    date: \"11/08/2020\",\r\n    Status: [\"todo\"],\r\n    Equipment: \"v102\",\r\n    Snaps: \"snap4\",\r\n\r\n  },\r\n  {\r\n    Storage:'155NAS',\r\n    Rounds: \"round[{YYYYMMDDhhmmss}_{seq3}] caputre[{seq2}]\",\r\n    Capture: \" caputre[07]\",\r\n    date: \"07/01/2020\",\r\n    Status: [\"doing\"],\r\n    Equipment: \"v102\",\r\n    Snaps: \"snap5\",\r\n  },\r\n  {\r\n    Storage: '123NAS',\r\n    Rounds: \"round[{YYYYMMDDhhmmss}_{seq3}]\",\r\n    Capture: \" caputre[01]\",\r\n    date: \"01/10/2021\",\r\n    rating: 4,\r\n    Status: [\"doing\"],\r\n    Equipment: \"v102\",\r\n    Snaps: \"snap6\",\r\n  },\r\n  {\r\n    Storage: '101NAS',\r\n    Rounds: \"round[{YYYYMMDDhhmmss}_{seq3}] caputre[{seq2}]\",\r\n    Capture: \" caputre[02]\",\r\n    date: \"12/10/2020\",\r\n    rating: 4,\r\n    Status: [\"doing\"],\r\n    Equipment: \"v102\",\r\n    Snaps: \"snap7\",\r\n  }\r\n];\r\n\r\n// Editable Example:\r\nconst colorOptions = {\r\n  \"\": \"&nbsp;\",\r\n  red: \"red\",\r\n  green: \"green\",\r\n  yellow: \"yellow\"\r\n};\r\nconst petOptions = [\r\n  { id: \"cat\", name: \"cat\" },\r\n  { id: \"dog\", name: \"dog\" },\r\n  { id: \"fish\", name: \"fish\" }\r\n];\r\nconst CapturePtableColumns = [\r\n  {formatter:\"rowSelection\", titleFormatter:\"rowSelection\", headerHozAlign:\"center\",hozAlign:\"center\",width:50, headerSort:false, cellClick:function(e, cell){\r\n    cell.getRow().toggleSelect()\r\n  }},\r\n  {\r\n    title: \"Storage\",\r\n    field: \"Storage\",\r\n    width: 100,\r\n    headerFilter: \"input\"\r\n  },\r\n  {\r\n    title: \"Rounds\",\r\n    field: \"Rounds\",\r\n    width: 400,\r\n    hozAlign: \"center\",\r\n    formatter: \"input\",\r\n  },\r\n  {\r\n    title: \"Capture\",\r\n    field: \"Capture\",\r\n    hozAlign: \"center\",\r\n    headerFilter: \"input\"\r\n  },\r\n  {\r\n    title: \"Status\",\r\n    field: \"Status\",\r\n    sorter: (a, b) => a.toString().localeCompare(b.toString()),\r\n    // editor: MultiSelectEditor,\r\n    editorParams: { values: petOptions },\r\n    formatter: MultiValueFormatter,\r\n    formatterParams: { style: \"PILL\" }\r\n  },\r\n  {\r\n    title: \"Date\",\r\n    field: \"date\",\r\n    // width: 150,\r\n    hozAlign: \"center\",\r\n    headerFilter: \"input\",\r\n    editorParams: { format: \"MM/DD/YYYY\" }\r\n  },\r\n  {\r\n    title: \"Equipment\",\r\n    field: \"Equipment\",\r\n    // width: 100,\r\n    hozAlign: \"center\",\r\n    editor: \"input\",\r\n    headerFilter: \"input\"\r\n  },\r\n  {\r\n    title: \"Snaps\",\r\n    field: \"Snaps\",\r\n    hozAlign: \"center\",\r\n    editor: \"input\",\r\n    // editor: true\r\n  }\r\n];\r\n\r\nclass Capture extends React.Component {\r\n  state = {\r\n    data: [],\r\n    selectedName: \"\"\r\n  };\r\n  ref = null;\r\n\r\n  // columns = [\r\n  //   { title: \"Name\", field: \"name\", width: 150 },\r\n  //   { title: \"Age\", field: \"age\", hozAlign: \"left\", formatter: \"progress\" },\r\n  //   { title: \"Favourite Color\", field: \"color\" },\r\n  //   { title: \"Date Of Birth\", field: \"dob\" },\r\n  //   { title: \"Rating\", field: \"rating\", hozAlign: \"center\", formatter: \"star\" },\r\n  //   {\r\n  //     title: \"Snaps?\",\r\n  //     field: \"Snaps\",\r\n  //     hozAlign: \"center\",\r\n  //     formatter: \"tickCross\"\r\n  //   },\r\n  //   {\r\n  //     title: \"Custom\",\r\n  //     field: \"custom\",\r\n  //     hozAlign: \"center\",\r\n  //     editor: \"input\",\r\n  //     formatter: reactFormatter(\r\n  //       <SimpleButton\r\n  //         onSelect={(name) => {\r\n  //           this.setState({ selectedName: name });\r\n  //           alert(name);\r\n  //         }}\r\n  //       />\r\n  //     )\r\n  //   }\r\n  // ];\r\n\r\n  rowClick = (e, row) => {\r\n    console.log(\"ref table: \", this.ref.table); // this is the Tabulator table instance\r\n    console.log(`rowClick id: \\${row.getData().id}`, row, e);\r\n    this.setState({ selectedName: row.getData().name });\r\n  };\r\n\r\n  setData = () => {\r\n    this.setState({ data });\r\n  };\r\n\r\n  clearData = () => {\r\n    this.setState({ data: [] });\r\n  };\r\n\r\n  render() {\r\n    const options = {\r\n      height: 300,\r\n\r\n    };\r\n    return (\r\n      <div>\r\n        <React15Tabulator\r\n          ref={(ref) => (this.ref = ref)}\r\n          columns={CapturePtableColumns}\r\n          data={data}\r\n          rowClick={this.rowClick}\r\n          options={options}\r\n          data-custom-attr=\"test-custom-attribute\"\r\n          // footerElement={<span>Footer</span>}\r\n        />\r\n        {/* <p>\r\n          <a href=\"https://github.com/ngduc/react-tabulator\" target=\"_blank\">\r\n            Back to: Github Repo: react-tabulator\r\n          </a>\r\n        </p> */}\r\n        <ButtonToolbar>\r\n              <Button\r\n              onClick={window.location.href ='/home'}\r\n              variant=\"primary\"\r\n              style={{marginRight:\"20px\"}}\r\n            >\r\n             지도로 보기\r\n            </Button>\r\n          </ButtonToolbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Capture;\r\n","C:\\PoclarCorr1\\poclacorr-v1\\src\\components\\IconButton.js",[],"C:\\PoclarCorr1\\poclacorr-v1\\src\\components\\CaptureDetailList.js",["114"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CommentIcon from '@material-ui/icons/Comment';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 600,\r\n    backgroundColor: theme.palette.background.paper,\r\n    marginLeft: '50px',\r\n    marginBottom: '50px'\r\n  },\r\n}));\r\n\r\nexport default function CheckboxList() {\r\n  const classes = useStyles();\r\n  const [checked, setChecked] = React.useState([0]);\r\n\r\n  const handleToggle = (value) => () => {\r\n    const currentIndex = checked.indexOf(value);\r\n    const newChecked = [...checked];\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n\r\n    setChecked(newChecked);\r\n  };\r\n\r\n  return (\r\n    <List className={classes.root}>\r\n      {[0, 1, 2, 3].map((value) => {\r\n        const labelId = `checkbox-list-label-${value}`;\r\n\r\n        return (\r\n          <ListItem key={value} role={undefined} dense button onClick={handleToggle(value)}>\r\n            <ListItemIcon>\r\n              <Checkbox\r\n                edge=\"start\"\r\n                checked={checked.indexOf(value) !== -1}\r\n                tabIndex={-1}\r\n                disableRipple\r\n                inputProps={{ 'aria-labelledby': labelId }}\r\n              />\r\n            </ListItemIcon>\r\n            <ListItemText id={labelId} primary={`Snap ${value + 1}`} />\r\n            <ListItemSecondaryAction>\r\n              <IconButton edge=\"end\" aria-label=\"delete\">\r\n                < DeleteIcon/>\r\n              </IconButton>\r\n            </ListItemSecondaryAction>\r\n          </ListItem>\r\n        );\r\n      })}\r\n    </List>\r\n  );\r\n}\r\n","C:\\PoclarCorr1\\poclacorr-v1\\src\\pages\\contentscaptures.js",["115"],"import React,{ Fragment } from 'react'\r\n// import RawTable from '../components/RawTable'\r\n// import CaptureTable from '../components/CapturePTable'\r\nimport CaptureDetailTable from '../components/CaptureDetailTable'\r\nimport MapComp from '../map/SnapMap'\r\nimport DoubleRangeSlider from '../components/DoubleRangeSlider'\r\n// import IconButton from '../components/IconButton'\r\nimport CaptureDetailList from '../components/CaptureDetailList'\r\nimport Divider from '@material-ui/core/Divider';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nclass LeftContentsDiv extends React.Component  {\r\n  render(){\r\n    return (\r\n            <div className=\"LeftContentsDiv\">\r\n                    <Fragment> \r\n                      <MapComp DataIE = {function (geojson,starttime,endtime,geojsonPath) {\r\n                        this.props.DataIE(geojson,starttime,endtime,geojsonPath)\r\n                        }.bind(this)}\r\n                        geojson = {this.props.geojson} \r\n                        starttime = {this.props.starttime} \r\n                        endtime = {this.props.endtime}\r\n                        geojsonPath ={this.props.geojsonPath}\r\n                        uuid = {this.props.uuid}\r\n                />\r\n                   </Fragment>\r\n                   <h3 style={{textAlign:'center'}}>Capture(P)</h3>  \r\n                    <Divider/>\r\n                    <CaptureDetailList/> \r\n                   <AddIcon style={{fontSize: 40 }}/>\r\n              </div>\r\n        );\r\n      }\r\n  }\r\n\r\nclass RightContentsDiv extends React.Component {\r\n  // constructor(props){\r\n  //   super(props);\r\n\r\n  //   this.state = {\r\n  //       value: Math.round(Math.random()*100)\r\n  //   };\r\n\r\n  //   this.updateValue = this.updateValue.bind(this);\r\n  // }\r\n\r\n  render(){\r\n    return (\r\n        <div className=\"RightContentsDiv\">\r\n                <CaptureDetailTable DataIE = {function (data) {\r\n                 alert('size'+ data)\r\n               }.bind(this)}\r\n               uuid = {this.props.uuid}\r\n               />\r\n                <DoubleRangeSlider DataIE = {function (geojson,starttime,endtime,geojsonPath) {\r\n                        this.props.DataIE(geojson,starttime,endtime,geojsonPath)\r\n                        }.bind(this)}\r\n                    geojson = {this.props.geojson} \r\n                    starttime = {this.props.starttime} \r\n                    endtime = {this.props.endtime}\r\n                    geojsonPath ={this.props.geojsonPath}\r\n                    uuid = {this.props.uuid}\r\n                />\r\n        </div>\r\n    );\r\n  }\r\n}\r\n  function SplitPane(props) {\r\n    return (\r\n      <div className=\"SplitPane\">\r\n        <div className=\"SplitPane-left\">\r\n          {props.left}\r\n        </div>\r\n        <div className=\"SplitPane-right\">\r\n          {props.right}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  \r\nclass contentscaptures extends React.Component {\r\n  state = {geojson:null , starttime: null ,endtime: null, gejosnPath: null, uuid:this.props.location.search }\r\n  \r\n  render(){\r\n    return (\r\n        <SplitPane\r\n           left={\r\n               <LeftContentsDiv DataIE = {function (geojson,starttime,endtime,geojsonPath) {\r\n                  this.setState({geojson:geojson,starttime:starttime,endtime:endtime,geojsonPath});\r\n                }.bind(this)}\r\n                geojson = {this.state.geojson} \r\n                starttime = {this.state.starttime} \r\n                endtime = {this.state.endtime}\r\n                geojsonPath ={this.props.geojsonPath}\r\n                uuid = {this.state.uuid}\r\n               />\r\n           }\r\n           right={\r\n              <RightContentsDiv DataIE = {function (geojson,starttime,endtime,geojsonPath){\r\n                 this.setState({geojson:geojson,starttime:starttime,endtime:endtime,geojsonPath})\r\n              }.bind(this)}\r\n              geojson = {this.state.geojson} \r\n              starttime = {this.state.starttime} \r\n              endtime = {this.state.endtime}\r\n              geojsonPath ={this.props.geojsonPath}\r\n              uuid ={this.state.uuid}\r\n              />\r\n              \r\n            } />\r\n   )\r\n  }\r\n}\r\n\r\nexport default contentscaptures\r\n","C:\\PoclarCorr1\\poclacorr-v1\\src\\components\\CaptureDetailTable.js",["116","117","118","119","120"],"import React from \"react\";\r\nimport \"../styles.css\";\r\n\r\nimport DateEditor from \"react-tabulator/lib/editors/DateEditor\";\r\nimport MultiValueFormatter from \"react-tabulator/lib/formatters/MultiValueFormatter\";\r\n// import MultiSelectEditor from \"react-tabulator/lib/editors/MultiSelectEditor\";\r\n\r\nimport \"react-tabulator/lib/styles.css\"; // default theme\r\nimport \"react-tabulator/css/bootstrap/tabulator_bootstrap.min.css\"; // use Theme(s)\r\n\r\n// for React 16.4.x use: import { ReactTabulator } - example in github repo.\r\nimport { React15Tabulator, reactFormatter } from \"react-tabulator\"; // for React 15.x\r\nimport queryString from 'query-string';\r\n\r\n\r\nconst CaptureListColumns = [\r\n  {formatter:\"rowSelection\", titleFormatter:\"rowSelection\", headerHozAlign:\"center\",hozAlign:\"center\",width:50, headerSort:false, cellClick:function(e, cell){\r\n    cell.getRow().toggleSelect()\r\n  }},\r\n  {\r\n    title: \"roundName\",\r\n    field: \"roundName\",\r\n    hozAlign: \"center\",\r\n    formatter: \"input\",\r\n    width: 150\r\n  },\r\n  {\r\n    title: \"date\",\r\n    field: \"date\",\r\n    hozAlign: \"center\",\r\n    // formatter: \"input\",\r\n    width: 150\r\n  },\r\n  {\r\n    title: \"isEnabled\",\r\n    field: \"isEnabled\",\r\n    width: 100,\r\n    hozAlign: \"center\",\r\n    formatter: \"tickCross\",\r\n    editor: true\r\n  },\r\n  {\r\n    title: \"recordStartTime\",\r\n    field: \"recordStartTime\",\r\n    hozAlign: \"center\",\r\n    // formatter: \"input\",\r\n    width: 150\r\n  },\r\n  {\r\n    title: \"recordEndTime\",\r\n    field: \"recordEndTime\",\r\n    hozAlign: \"center\",\r\n    // formatter: \"input\",\r\n    width: 150\r\n  },\r\n  {\r\n    title: \"storage\",\r\n    field: \"storage\",\r\n    hozAlign: \"center\",\r\n    // formatter: \"input\",\r\n    width: 150\r\n  },\r\n  {\r\n    title: \"uuid\",\r\n    field: \"uuid\",\r\n    hozAlign: \"center\",\r\n    // formatter: \"input\",\r\n    width: 150\r\n  },\r\n  {\r\n    title: \"directory\",\r\n    field: \"directory\",\r\n    hozAlign: \"center\",\r\n    // formatter: \"input\",\r\n    width: 150\r\n  },\r\n];\r\n\r\nclass CaptureDetailTable extends React.Component {\r\n   state = {\r\n      data: [],\r\n      selectedName: \"\",\t\r\n      ref : null\r\n    }\r\n\r\n\r\n  componentDidMount() {\r\n    // const search  = queryString.parse(this.props.location.search);\r\n    }\r\n\r\n  rowClick = (e, row) => {\r\n    console.log(\"ref table: \", this.ref.table); // this is the Tabulator table instance\r\n    console.log(`rowClick id: \\${row.getData().id}`, row, e);\r\n    \r\n    // this.setState({ data: row.getData().name });\r\n  };\r\n\r\n  setData = (e) => {\r\n    this.setState({ e });\r\n  };\r\n\r\n  clearData = () => {\r\n    this.setState({ data: [] });\r\n  };\r\n\r\n  render() {\r\n    // const {search}  = props.location.search;\r\n    console.log(this.props.uuid)\r\n    console.log(this.props.uuid.substring(1))\r\n    const options = {\r\n      height: 300,\r\n      ajaxURL: `../../api/admin/contents/capturep/one?id=${this.props.uuid.substring(1)}`,\r\n      headers: {\r\n        contentType: 'application/json; charset=utf-8',\r\n        dataType: 'json', //set specific content type\r\n      },\r\n      ajaxResponse: function (url, params, response) {\r\n        return Object.values(response); //return the response data to tabulator\r\n      },\r\n      ajaxError: function (error) {\r\n          console.log('ajaxError', error);\r\n      }\r\n    };\r\n    return (\r\n      <div>\r\n        <React15Tabulator \r\n          ref={(ref) => (this.ref = ref)}\r\n          columns={CaptureListColumns}\r\n          data={this.state.data}\r\n          rowClick= {function(){\r\n          }.bind(this)}    \r\n          options={options}\r\n          data-custom-attr=\"test-custom-attribute\"\r\n        />\r\n        {/* <p>\r\n          <a href=\"https://github.com/ngduc/react-tabulator\" target=\"_blank\">\r\n            Back to: Github Repo: react-tabulator\r\n          </a>\r\n        </p> */}\r\n       \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CaptureDetailTable;\r\n","C:\\PoclarCorr1\\poclacorr-v1\\src\\map\\SnapMap.js",["121","122","123","124","125","126","127","128","129","130","131","132","133","134","135"],{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","severity":1,"message":"141","line":7,"column":8,"nodeType":"142","messageId":"143","endLine":7,"endColumn":18},{"ruleId":"144","severity":1,"message":"145","line":185,"column":13,"nodeType":"146","endLine":185,"endColumn":80},{"ruleId":"140","severity":1,"message":"147","line":5,"column":8,"nodeType":"142","messageId":"143","endLine":5,"endColumn":18},{"ruleId":"140","severity":1,"message":"148","line":13,"column":28,"nodeType":"142","messageId":"143","endLine":13,"endColumn":42},{"ruleId":"140","severity":1,"message":"149","line":15,"column":10,"nodeType":"142","messageId":"143","endLine":15,"endColumn":22},{"ruleId":"140","severity":1,"message":"150","line":96,"column":7,"nodeType":"142","messageId":"143","endLine":96,"endColumn":19},{"ruleId":"140","severity":1,"message":"148","line":7,"column":10,"nodeType":"142","messageId":"143","endLine":7,"endColumn":24},{"ruleId":"140","severity":1,"message":"151","line":18,"column":7,"nodeType":"142","messageId":"143","endLine":18,"endColumn":12},{"ruleId":"140","severity":1,"message":"152","line":66,"column":9,"nodeType":"142","messageId":"143","endLine":66,"endColumn":18},{"ruleId":"140","severity":1,"message":"153","line":67,"column":9,"nodeType":"142","messageId":"143","endLine":67,"endColumn":16},{"ruleId":"140","severity":1,"message":"154","line":1,"column":16,"nodeType":"142","messageId":"143","endLine":1,"endColumn":25},{"ruleId":"140","severity":1,"message":"155","line":1,"column":26,"nodeType":"142","messageId":"143","endLine":1,"endColumn":36},{"ruleId":"140","severity":1,"message":"156","line":1,"column":38,"nodeType":"142","messageId":"143","endLine":1,"endColumn":46},{"ruleId":"140","severity":1,"message":"157","line":5,"column":8,"nodeType":"142","messageId":"143","endLine":5,"endColumn":13},{"ruleId":"140","severity":1,"message":"147","line":8,"column":8,"nodeType":"142","messageId":"143","endLine":8,"endColumn":18},{"ruleId":"140","severity":1,"message":"158","line":9,"column":8,"nodeType":"142","messageId":"143","endLine":9,"endColumn":27},{"ruleId":"140","severity":1,"message":"147","line":5,"column":8,"nodeType":"142","messageId":"143","endLine":5,"endColumn":18},{"ruleId":"140","severity":1,"message":"148","line":13,"column":28,"nodeType":"142","messageId":"143","endLine":13,"endColumn":42},{"ruleId":"140","severity":1,"message":"149","line":15,"column":10,"nodeType":"142","messageId":"143","endLine":15,"endColumn":22},{"ruleId":"140","severity":1,"message":"150","line":95,"column":7,"nodeType":"142","messageId":"143","endLine":95,"endColumn":19},{"ruleId":"140","severity":1,"message":"159","line":11,"column":8,"nodeType":"142","messageId":"143","endLine":11,"endColumn":19},{"ruleId":"160","severity":1,"message":"161","line":52,"column":18,"nodeType":"162","messageId":"163","endLine":52,"endColumn":22,"fix":"164"},{"ruleId":"140","severity":1,"message":"147","line":4,"column":8,"nodeType":"142","messageId":"143","endLine":4,"endColumn":18},{"ruleId":"140","severity":1,"message":"158","line":5,"column":8,"nodeType":"142","messageId":"143","endLine":5,"endColumn":27},{"ruleId":"140","severity":1,"message":"148","line":12,"column":28,"nodeType":"142","messageId":"143","endLine":12,"endColumn":42},{"ruleId":"140","severity":1,"message":"165","line":13,"column":8,"nodeType":"142","messageId":"143","endLine":13,"endColumn":19},{"ruleId":"160","severity":1,"message":"161","line":131,"column":13,"nodeType":"162","messageId":"163","endLine":131,"endColumn":17,"fix":"166"},{"ruleId":"140","severity":1,"message":"167","line":6,"column":20,"nodeType":"142","messageId":"143","endLine":6,"endColumn":35},{"ruleId":"140","severity":1,"message":"168","line":6,"column":36,"nodeType":"142","messageId":"143","endLine":6,"endColumn":45},{"ruleId":"140","severity":1,"message":"169","line":7,"column":8,"nodeType":"142","messageId":"143","endLine":7,"endColumn":19},{"ruleId":"170","severity":1,"message":"171","line":68,"column":16,"nodeType":"172","messageId":"163","endLine":68,"endColumn":18},{"ruleId":"170","severity":1,"message":"171","line":71,"column":16,"nodeType":"172","messageId":"163","endLine":71,"endColumn":18},{"ruleId":"170","severity":1,"message":"171","line":123,"column":45,"nodeType":"172","messageId":"163","endLine":123,"endColumn":47},{"ruleId":"170","severity":1,"message":"173","line":132,"column":18,"nodeType":"172","messageId":"163","endLine":132,"endColumn":20},{"ruleId":"174","severity":1,"message":"175","line":133,"column":33,"nodeType":"176","messageId":"177","endLine":133,"endColumn":35},{"ruleId":"170","severity":1,"message":"171","line":133,"column":54,"nodeType":"172","messageId":"163","endLine":133,"endColumn":56},{"ruleId":"174","severity":1,"message":"175","line":133,"column":75,"nodeType":"176","messageId":"177","endLine":133,"endColumn":77},{"ruleId":"170","severity":1,"message":"171","line":133,"column":96,"nodeType":"172","messageId":"163","endLine":133,"endColumn":98},{"ruleId":"170","severity":1,"message":"173","line":150,"column":15,"nodeType":"172","messageId":"163","endLine":150,"endColumn":17},{"ruleId":"170","severity":1,"message":"173","line":150,"column":35,"nodeType":"172","messageId":"163","endLine":150,"endColumn":37},{"ruleId":"170","severity":1,"message":"173","line":187,"column":26,"nodeType":"172","messageId":"163","endLine":187,"endColumn":28},{"ruleId":"170","severity":1,"message":"173","line":187,"column":71,"nodeType":"172","messageId":"163","endLine":187,"endColumn":73},"no-native-reassign",["178"],"no-negated-in-lhs",["179"],"no-unused-vars","'IconButton' is defined but never used.","Identifier","unusedVar","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'DateEditor' is defined but never used.","'reactFormatter' is defined but never used.","'SimpleButton' is defined but never used.","'colorOptions' is assigned a value but never used.","'marks' is assigned a value but never used.","'startTime' is assigned a value but never used.","'endTime' is assigned a value but never used.","'dataState' is defined but never used.","'dataEffect' is defined but never used.","'useState' is defined but never used.","'axios' is defined but never used.","'MultiValueFormatter' is defined but never used.","'CommentIcon' is defined but never used.","no-extra-bind","The function binding is unnecessary.","CallExpression","unexpected",{"range":"180","text":"181"},"'queryString' is defined but never used.",{"range":"182","text":"181"},"'transformExtent' is defined but never used.","'transform' is defined but never used.","'geoJsonExam' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","Expected '!==' and instead saw '!='.","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","no-global-assign","no-unsafe-negation",[1939,1950],"",[3432,3443]]